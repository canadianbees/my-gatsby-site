{
    "portfolio": [
        {
            "src": "./assets/paradise/pp_home.png",
            "title": "Paradise Pages",
            "role": "Front-end",
            "tools": "LAMP Stack",
            "url": "http://www.4331paradise.com/",
            "description": "Paradise Pages is a personal contacts manager where users can sign up and upload their contacts. This website was made by using a LAMP (Linux, Apache, MySQL, PHP) stack. Features for this website include live searching contacts, adding a contact's information including phone number and email, and deleting contacts. Paradise Pages was a team effort with peers from my software development class, COP4331C, at the University of Central Florida during the Fall 2022 term. Our professor was so impressed with our work, he decided to pay for its domain so he can use it as an example for future semesters.",
            "media": [
                {
                    "src": "./assets/paradise/pp_home.png",
                    "alt": "Login to Paradise Pages page"
                },
                {
                    "src": "./assets/paradise/pp_contacts.png",
                    "alt": "Paradise Pages contacts page"
                },
                {
                    "src": "./assets/paradise/pp_deletion.png",
                    "alt": "Paradise Pages deletion feature"
                }
            ]
        },
        {
            "src": "./assets/anthem/anthem_login.png",
            "title": "Anthem",
            "role": "Front-end",
            "tools": "MERN Stack",
            "description": "Anthem was a social media website with built-in Spotify integration. Users were able to sign up for an account and from there, were able to post onto their timeline which would showcase their music taste to their followers. Using the Spotify Web API, the ability to post 30-second snippets of songs were made possible. These snippets were shared to the timeline where a user's followers would be able to play it. Users could attach a caption or a picture to these snippets. If they weren't vibing with any snippets at all, they also had the option to post a simple caption or picture. Profile customization is another feature that users had access to. Users also had the ability to customize their profile through profile pictures and cover pictures. Since Anthem was a music-centric social media website, users were also able to upload their 'Anthem'. Through this feature, users were able to search and upload a song to their profile where profile vistors can click on the song and play it. Anthem was a team effort with peers from my software development class, COP4331C, at the University of Central Florida during the Fall 2022 term.",
            "media": [
                {
                    "src": "./assets/anthem/anthem_login.png",
                    "alt": "Login to Anthem page"
                },
                {
                    "src": "./assets/anthem/loginIntoSpotify.png",
                    "alt": "Login to Spotify page"
                },
                {
                    "src": "./assets/anthem/homePagenoPost.png",
                    "alt": "Home Page"
                },
                {
                    "src": "./assets/anthem/searchingforSongPost.png",
                    "alt": "Login to Anthem page"
                },
                {
                    "src": "./assets/anthem/spacePost.png",
                    "alt": "Post"
                },
                {
                    "src": "./assets/anthem/profilepage.png",
                    "alt": "Profile Page"
                },
                {
                    "src": "./assets/anthem/feed.png",
                    "alt": "feed"
                }
            ],
            "videos": [
                {
                    "videoSrcURL": "./assets/anthem/anthemdemovid.webm",
                    "alt": "Post"
                },
                {
                    "videoSrcURL": "./assets/anthem/spacevid.webm",
                    "alt": "Post"
                }
            ]
        },

        {
            "src": "./assets/acr/github_logo.png",
            "title": "Automated Code Review Bot",
            "role": "Developer",
            "tools": "Python, Git, Github Action Workflows",
            "description": "During my time at Trellix, I was tasked with creating a bot that conducts code reviews on the GitHub platform. The bot is triggered when a pull request is opened or updated with a new commit through GitHub Workflows. Powered by Gemini 1.5 Pro, the bot operates with a token limit of 1 million, enabling it to handle large context windows. These windows include files from both the head and base branches that depend on the changed file(s), allowing the bot to analyze the impact of changes and determine whether they could potentially break the existing code. The bot is versatile and can be used in repositories with different languages such as Python and LookML. It checks for language-specific best practices and can dynamically adjust based on the repository structure. For example, if DAGs (Directed Acyclic Graphs) are detected, the bot runs additional checks for best practices related to data pipelines. The bot also detects unused variables, assesses the quality of comments, and provides suggestions to improve code readability. The action also supports automated branch tagging upon successful pull request merges, making it a comprehensive tool for automated code reviews across diverse repositories.",
            "media": [
               
            ],
            "videos": [
                {
                    "videoSrcURL": "./assets/anthem/anthemdemovid.webm",
                    "alt": "Post"
                },
                {
                    "videoSrcURL": "./assets/anthem/spacevid.webm",
                    "alt": "Post"
                }
            ]
        }
    ]
}